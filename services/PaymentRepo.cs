// Path: LedgerLink/Services/PaymentRepo.cs
using LedgerLink.Models;
using LedgerLink.Interface;
using LedgerLink.Data;
using System.Collections.Generic;
using System.Linq;
using System; // Required for Guid

namespace LedgerLink.Services
{
    public class PaymentRepo : IPaymentRepo
    {
        private readonly AppDbContext _context;

        public PaymentRepo(AppDbContext context)
        {
            _context = context;
        }

        public IEnumerable<Payment> GetAllPayments()
        {
            return _context.Payments.ToList();
        }

        // Changed parameter type to Guid
        public Payment? GetPaymentById(Guid id)
        {
            // Find() method can take Guid as primary key
            return _context.Payments.Find(id);
        }

        public Payment AddPayment(Payment payment)
        {
            // CRITICAL CHANGE: Generate the GUID for the Id BEFORE adding to context
            // This is because Guids are not typically auto-generated by the DB like int IDs.
            if (payment.Id == Guid.Empty) // Check if Id is not already set
            {
                payment.Id = Guid.NewGuid(); // Generate a new unique GUID
            }
            _context.Payments.Add(payment);
            _context.SaveChanges();
            return payment;
        }

        public Payment? UpdatePayment(Payment payment)
        {
            // Find by Guid
            var existingPayment = _context.Payments.Find(payment.Id);
            if (existingPayment != null)
            {
                _context.Entry(existingPayment).CurrentValues.SetValues(payment);
                _context.SaveChanges();
            }
            return existingPayment;
        }

        // Changed parameter type to Guid
        public Payment? DeletePayment(Guid id)
        {
            // Find by Guid
            var payment = _context.Payments.Find(id);
            if (payment != null)
            {
                _context.Payments.Remove(payment);
                _context.SaveChanges();
            }
            return payment;
        }
    }
}